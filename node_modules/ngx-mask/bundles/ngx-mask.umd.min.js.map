{
  "version": 3,
  "file": "ngx-mask.umd.min.js",
  "sources": [
    "ng://ngx-mask/node_modules/tslib/tslib.es6.js",
    "ng://ngx-mask/out/app/ngx-mask/config.ts",
    "ng://ngx-mask/out/app/ngx-mask/mask.service.ts",
    "ng://ngx-mask/out/app/ngx-mask/mask.directive.ts",
    "ng://ngx-mask/out/app/ngx-mask/ngx-mask.module.ts"
  ],
  "sourcesContent": [
    "/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [0, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { if (o[n]) i[n] = function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; }; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator];\r\n    return m ? m.call(o) : typeof __values === \"function\" ? __values(o) : o[Symbol.iterator]();\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n",
    "import { InjectionToken } from '@angular/core';\n\nexport interface IConfig {\n  clearIfNotMatch: boolean;\n  dropSpecialCharacters: boolean;\n  specialCharacters: string[];\n  patterns: {\n    [character: string]: {\n      pattern: RegExp,\n      optional?: boolean\n    }\n  };\n}\nexport type optionsConfig = {\n  [P in keyof IConfig]?: IConfig[P]\n};\n\nexport const config: InjectionToken<string> = new InjectionToken('config');\nexport const NEW_CONFIG: InjectionToken<string> = new InjectionToken('NEW_CONFIG');\nexport const INITIAL_CONFIG: InjectionToken<IConfig> = new InjectionToken('INITIAL_CONFIG');\n\nexport const initialConfig: IConfig = {\n  clearIfNotMatch: false,\n  dropSpecialCharacters: true,\n  specialCharacters: ['/', '(', ')', '.', ':', '-', ' ', '+'],\n  patterns: {\n    '0': {\n      pattern: new RegExp('\\\\d'),\n    },\n    '9': {\n      pattern: new RegExp('\\\\d'),\n      optional: true\n    },\n    'A': {\n      pattern: new RegExp('\\[a-zA-Z0-9\\]')\n    },\n    'S': {\n      pattern: new RegExp('\\[a-zA-Z\\]')\n    }\n  }\n};\n",
    "import { ElementRef, EventEmitter, Inject, Injectable, Renderer2 } from '@angular/core';\nimport { config, IConfig } from './config';\nimport { DOCUMENT } from '@angular/common';\nimport { ControlValueAccessor } from '@angular/forms';\nimport 'rxjs/add/operator/take';\n\n@Injectable()\nexport class MaskService implements ControlValueAccessor {\n\n  public dropSpecialCharacters: IConfig['dropSpecialCharacters'];\n  public clearIfNotMatch: IConfig['clearIfNotMatch'];\n  public maskExpression: string = '';\n  public maskSpecialCharacters: IConfig['specialCharacters'];\n  public maskAvailablePatterns: IConfig['patterns'];\n  public maskSetter$$: EventEmitter<string> = new EventEmitter();\n\n  private _regExpForRemove: RegExp;\n  private _shift: Set<number>;\n  private _formElement: HTMLInputElement;\n\n  // tslint:disable-next-line\n  public onChange = (_: any) => { };\n\n  public onTouch = () => { };\n\n  public constructor(\n    // tslint:disable-next-line\n    @Inject(DOCUMENT) private document: any,\n    @Inject(config) private _config: IConfig,\n    private _elementRef: ElementRef,\n    private _renderer: Renderer2,\n  ) {\n    this._shift = new Set();\n    this.clearIfNotMatch = this._config.clearIfNotMatch;\n    this.dropSpecialCharacters = this._config.dropSpecialCharacters;\n    this.maskSpecialCharacters = this._config!.specialCharacters;\n    this.maskAvailablePatterns = this._config.patterns;\n    this._regExpForRemove = new RegExp(this.maskSpecialCharacters\n      .map((item: string) => `\\\\${item}`)\n      .join('|'), 'gi');\n\n    this._formElement = this._elementRef.nativeElement;\n  }\n\n  public applyMask(inputValue: string, maskExpression: string, position: number = 0, cb: Function = () => { }): string {\n    if (inputValue === undefined || inputValue === null) {\n      return '';\n    }\n\n    let cursor: number = 0;\n    let result: string = '';\n\n    const inputArray: string[] = inputValue.toString()\n      .split('');\n    // tslint:disable-next-line\n    for (let i: number = 0, inputSymbol: string = inputArray[0]; i\n    < inputArray.length; i++ , inputSymbol = inputArray[i]) {\n      if (result.length === maskExpression.length) {\n        break;\n      }\n\n      if (this._checkSymbolMask(inputSymbol, maskExpression[cursor])) {\n        result += inputSymbol;\n        cursor++;\n      } else if (this.maskSpecialCharacters.indexOf(maskExpression[cursor]) !== -1) {\n        result += maskExpression[cursor];\n        cursor++;\n        this._shift.add(cursor);\n        i--;\n      } else if (this.maskSpecialCharacters.indexOf(inputSymbol) > -1\n        && this.maskAvailablePatterns[maskExpression[cursor]]\n        && this.maskAvailablePatterns[maskExpression[cursor]].optional) {\n        cursor++;\n        i--;\n      }\n    }\n    if (result.length + 1 === maskExpression.length\n      && this.maskSpecialCharacters.indexOf(maskExpression[maskExpression.length - 1]) !== -1) {\n      result += maskExpression[maskExpression.length - 1];\n    }\n\n    let shift: number = 1;\n    let newPosition: number = position + 1;\n    while (this._shift.has(newPosition)) {\n      shift++;\n      newPosition++;\n    }\n    cb(this._shift.has(position) ? shift : 0);\n    return result;\n  }\n\n  public applyValueChanges(position: number = 0, cb: Function = () => { }): void {\n    const maskedInput: string = this.applyMask(this._formElement.value, this.maskExpression, position, cb);\n\n    this._formElement.value = maskedInput;\n\n    this.dropSpecialCharacters === true\n      ? this.onChange(this._removeMask(maskedInput))\n      : this.onChange(maskedInput);\n\n    if (this._formElement === this.document.activeElement) {\n      return;\n    }\n    this.clearIfNotMatchFn();\n  }\n\n  public clearIfNotMatchFn(): void {\n    if (\n      this.clearIfNotMatch === true && this.maskExpression.length\n      !== this._formElement.value.length) {\n      this._formElementProperty = ['value', ''];\n    }\n  }\n\n\n  /** It writes the value in the input */\n  public async writeValue(inputValue: string): Promise<void> {\n    if (inputValue === undefined) {\n      return;\n    }\n    const maskExpression: string = this.maskExpression || await this.maskSetter$$.take(1)\n      .toPromise();\n\n    inputValue\n      ? this._formElementProperty = ['value', this.applyMask(inputValue, maskExpression)]\n      : this._formElementProperty = ['value', ''];\n  }\n\n  // tslint:disable-next-line\n  public registerOnChange(fn: any): void {\n    this.onChange = fn;\n  }\n\n  // tslint:disable-next-line\n  public registerOnTouched(fn: any): void {\n    this.onTouch = fn;\n  }\n\n  /** It disables the input element */\n  public setDisabledState(isDisabled: boolean): void {\n    isDisabled\n      ? this._formElementProperty = ['disabled', 'true']\n      : this._formElementProperty = ['disabled', 'false'];\n  }\n\n  private _removeMask(value: string): string {\n    return value\n      ? value.replace(this._regExpForRemove, '')\n      : value;\n  }\n\n  private _checkSymbolMask(inputSymbol: string, maskSymbol: string): boolean {\n    return inputSymbol\n      === maskSymbol\n      || this.maskAvailablePatterns[maskSymbol] && this.maskAvailablePatterns[maskSymbol].pattern\n      && this.maskAvailablePatterns[maskSymbol].pattern.test(inputSymbol);\n  }\n\n  private set _formElementProperty([name, value]: [string, string]) {\n    this._renderer.setProperty(this._formElement, name, value);\n  }\n\n}",
    "import {\n  Directive, HostListener, Input\n} from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MaskService } from './mask.service';\nimport { IConfig } from './config';\n\n@Directive({\n  selector: '[mask]',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: MaskService,\n      multi: true\n    },\n    MaskService\n  ],\n})\nexport class MaskDirective {\n\n  private _maskValue: string;\n\n  public constructor(\n    private _maskService: MaskService,\n  ) { }\n\n  @Input('mask')\n  public set maskExpression(value: string) {\n    this._maskValue = value || '';\n    if (!this._maskValue) {\n      return;\n    }\n    this._maskService.maskExpression = this._maskValue;\n    this._maskService.maskSetter$$.emit(this._maskValue);\n  }\n\n  @Input()\n  public set specialCharacters(value: IConfig['specialCharacters']) {\n    if (!value || !Array.isArray(value) || Array.isArray(value) && !value.length) {\n      return;\n    }\n    this._maskService.maskSpecialCharacters = value;\n  }\n\n  @Input()\n  public set patterns(value: IConfig['patterns']) {\n    if (!value) {\n      return;\n    }\n    this._maskService.maskAvailablePatterns = value;\n  }\n\n  @Input()\n  public set dropSpecialCharacters(value: IConfig['dropSpecialCharacters']) {\n    this._maskService.dropSpecialCharacters = value;\n  }\n\n  @Input()\n  public set clearIfNotMatch(value: IConfig['clearIfNotMatch']) {\n    this._maskService.clearIfNotMatch = value;\n  }\n\n  @HostListener('input', ['$event'])\n  public onInput(e: KeyboardEvent): void {\n    if (!this._maskValue) {\n      return;\n    }\n    const el: HTMLInputElement = (e.target as HTMLInputElement);\n    const position: number = el.selectionStart;\n\n    let caretShift: number = 0;\n    this._maskService.applyValueChanges(\n      position,\n      (shift: number) => caretShift = shift\n    );\n    el.selectionStart = el.selectionEnd = position + (\n      // tslint:disable-next-line\n      (e as any).inputType === 'deleteContentBackward'\n        ? 0\n        : caretShift\n    );\n  }\n\n  @HostListener('blur')\n  public onBlur(): void {\n    this._maskService.clearIfNotMatchFn();\n    this._maskService.onTouch();\n  }\n}\n",
    "import { ModuleWithProviders, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MaskDirective } from './mask.directive';\n\nimport { config, INITIAL_CONFIG, initialConfig, NEW_CONFIG, optionsConfig } from './config';\n\n@NgModule({\n  imports: [CommonModule],\n  exports: [MaskDirective],\n  declarations: [MaskDirective]\n})\nexport class NgxMaskModule {\n\n  public static forRoot(configValue?: optionsConfig): ModuleWithProviders {\n    return {\n      ngModule: NgxMaskModule,\n      providers: [\n        {\n          provide: NEW_CONFIG,\n          useValue: configValue\n        },\n        {\n          provide: INITIAL_CONFIG,\n          useValue: initialConfig\n        },\n        {\n          provide: config,\n          useFactory: _configFactory,\n          deps: [INITIAL_CONFIG, NEW_CONFIG]\n        },\n      ]\n    };\n  }\n}\n\n/**\n * @internal\n */\nexport function _configFactory\n(initConfig: optionsConfig, configValue: optionsConfig | (() => optionsConfig)): Function | optionsConfig {\n  return (typeof configValue === 'function') ? configValue() : { ...initConfig, ...configValue };\n}\n"
  ],
  "names": [
    "__generator",
    "thisArg",
    "body",
    "f",
    "y",
    "t",
    "g",
    "_",
    "label",
    "sent",
    "trys",
    "ops",
    "next",
    "verb",
    "throw",
    "return",
    "Symbol",
    "iterator",
    "this",
    "n",
    "v",
    "op",
    "TypeError",
    "call",
    "done",
    "value",
    "pop",
    "length",
    "push",
    "e",
    "step",
    "NEW_CONFIG",
    "InjectionToken",
    "INITIAL_CONFIG",
    "initialConfig",
    "clearIfNotMatch",
    "dropSpecialCharacters",
    "specialCharacters",
    "patterns",
    "0",
    "pattern",
    "RegExp",
    "9",
    "optional",
    "A",
    "S",
    "_config",
    "_elementRef",
    "_renderer",
    "maskExpression",
    "maskSetter$$",
    "EventEmitter",
    "onChange",
    "onTouch",
    "_shift",
    "Set",
    "maskSpecialCharacters",
    "maskAvailablePatterns",
    "_regExpForRemove",
    "map",
    "item",
    "join",
    "_formElement",
    "nativeElement",
    "cb",
    "inputValue",
    "undefined",
    "cursor",
    "result",
    "inputArray",
    "toString",
    "split",
    "i",
    "inputSymbol",
    "_checkSymbolMask",
    "indexOf",
    "add",
    "shift",
    "newPosition",
    "position",
    "has",
    "MaskService",
    "prototype",
    "applyValueChanges",
    "maskedInput",
    "applyMask",
    "_removeMask",
    "document",
    "activeElement",
    "clearIfNotMatchFn",
    "writeValue",
    "_arguments",
    "generator",
    "_a",
    "tslib_1.__generator",
    "_b",
    "P",
    "Promise",
    "resolve",
    "reject",
    "fulfilled",
    "rejected",
    "then",
    "apply",
    "registerOnChange",
    "fn",
    "maskSymbol",
    "test",
    "Object",
    "defineProperty",
    "o",
    "m",
    "r",
    "ar",
    "error",
    "setProperty",
    "name",
    "ctorParameters",
    "type",
    "decorators",
    "Inject",
    "args",
    "DOCUMENT",
    "config",
    "ElementRef",
    "Renderer2",
    "MaskDirective",
    "_maskService",
    "set",
    "_maskValue",
    "Array",
    "isArray",
    "enumerable",
    "configurable",
    "onInput",
    "el",
    "selectionStart",
    "caretShift",
    "onBlur",
    "Directive",
    "selector",
    "providers",
    "provide",
    "NG_VALUE_ACCESSOR",
    "useExisting",
    "multi",
    "propDecorators",
    "Input",
    "NgxMaskModule"
  ],
  "mappings": "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"
}
